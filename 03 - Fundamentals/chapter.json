{
  "entries": [
    {
      "type": "chapter",
      "id": "0b0d5dcd-a111-49de-8815-f78edb541090",
      "parameters": [
        "Title:1",
        "Fundamentals",
        "Description:1",
        "Covers the fundamentals of Gradle, assuming that the reader has little knowledge of Gradle."
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "section",
      "id": "fc609ed0-16a3-4529-abee-4e585a721e16",
      "parameters": [
        "The setting.gradle file"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "b424d68f-5e6b-4b9b-931b-260d7d960086",
      "parameters": [
        "Let's start by deleting the directory that we will be working on `gradle-fundamentals-manual`. This makes sure that",
        "there is no residue and that we are working in a clean slate.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "d052c749-3dc7-464f-b01a-204d5cf59366",
      "parameters": [
        "rm -rf 'gradle-fundamentals-manual'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "9f623d54-cf1f-4756-b15d-b84ce6380c5f",
      "parameters": [
        "Create the directory.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "cc11bbfd-07f9-485f-9a8e-5ab5c455dffe",
      "parameters": [
        "mkdir 'gradle-fundamentals-manual'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "8eeaa445-4768-4ed1-bddb-09935b34fc12",
      "parameters": [
        "Gradle helps the programmer through [tasks](https://docs.gradle.org/current/userguide/tutorial_using_tasks.html). For",
        "example, if we need to compile our code we will use",
        "the [_compileJava_](https://docs.gradle.org/current/userguide/java_plugin.html) task.",
        "",
        "Let's try to list all tasks that are available to us, first.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "6b365089-9a90-46d3-9909-bb047c44b479",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "gradle tasks"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {},
      "expectedExitValue": 1,
      "commandTimeout": 30.000000000
    },
    {
      "type": "markdown",
      "id": "002570eb-97ec-44d9-8c65-44175230bb49",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "The task fails.",
        "",
        "```",
        "BUILD FAILED in 1s",
        "```",
        "",
        "If you read the message, Gradle provides a hint to why this has failed.",
        "",
        "```",
        "A Gradle build should contain a 'settings.gradle' or 'settings.gradle.kts' file in its root directory. It may also contain a 'build.gradle' or 'build.gradle.kts' file.",
        "```",
        "",
        "A Gradle project requires at least the `settings.gradle` file. But before we start with Gradle, let's add version",
        "control so that we can keep track of our changes.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "3b0f556b-24f2-4c45-af29-5974c405c2a6",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "git init --initial-branch=main"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "16820954-dfa2-4e92-b07f-197788fd129e",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Set Git's user (_developer_) name, using the providing variable. Press enter after entering your name and the rest will",
        "update automatically. ",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "variable",
      "id": "198eebfb-064f-4e4c-ac67-c9aa2d2bcfa7",
      "name": "DEVELOPER_NAME",
      "parameters": [
        "Albert Attard"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {},
      "sensitive": false
    },
    {
      "type": "command",
      "id": "bf720953-5f7c-4474-884c-e477f7e70198",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "git config user.name '${DEVELOPER_NAME}'"
      ],
      "variables": [
        "DEVELOPER_NAME"
      ],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "42fca908-3d18-4309-91f5-7ebe952daad3",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Set Git's user (_developer_) email, using the providing variable. Press enter after entering your name and the rest will",
        "update automatically. The email is more important than the name as Git uses this to identify you in the event you push",
        "these to a remote repository.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "variable",
      "id": "8ceb8eba-c74c-42c5-8cc2-ef7c62fc4ca3",
      "name": "DEVELOPER_EMAIL",
      "parameters": [
        "albertattard@gmail.com"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {},
      "sensitive": false
    },
    {
      "type": "command",
      "id": "912e6f02-b785-4a5c-ae68-3e1b2d0fca7b",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "git config user.email '${DEVELOPER_EMAIL}'"
      ],
      "variables": [
        "DEVELOPER_EMAIL"
      ],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "561c85ee-eeb0-4572-bb1a-e1d887c35726",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Let's verify that our Git configuration was properly applied.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "79cc1b39-06af-4815-bdb4-f605213c2bbd",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "git config --list --local"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "4b21f350-1e0c-4b29-86fe-f7815c5e665d",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Both name and email should be properly set, as shown next.",
        "",
        "```",
        "user.name=${DEVELOPER_NAME}",
        "user.email=${DEVELOPER_EMAIL}",
        "```",
        "",
        "Let's turn our attention back to Gradle now and create the `settings.gradle` file.",
        ""
      ],
      "variables": [
        "DEVELOPER_NAME",
        "DEVELOPER_EMAIL"
      ],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "a0d3c5e9-297c-4e7c-a1ba-a35b527ec8f8",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "touch 'settings.gradle'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "238f77aa-8a21-4bad-aef8-31c5aebefe44",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "The file `settings.gradle`, is empty, and that's all good for now. Let's try to list all tasks again.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "2af273a4-3b75-47bb-b5e4-1f7f6bc84b25",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "gradle tasks"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {},
      "commandTimeout": 30.000000000
    },
    {
      "type": "markdown",
      "id": "1745e755-e614-487f-83b3-6d1fe534be46",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "This time, it worked. Gradle listed all available tasks, as shown next.",
        "",
        "```",
        "------------------------------------------------------------",
        "Tasks runnable from root project 'gradle-fundamentals-manual'",
        "------------------------------------------------------------",
        "",
        "Build Setup tasks",
        "-----------------",
        "init - Initializes a new Gradle build.",
        "wrapper - Generates Gradle wrapper files.",
        "",
        "Help tasks",
        "----------",
        "buildEnvironment - Displays all buildscript dependencies declared in root project 'gradle-fundamentals-manual'.",
        "dependencies - Displays all dependencies declared in root project 'gradle-fundamentals-manual'.",
        "dependencyInsight - Displays the insight into a specific dependency in root project 'gradle-fundamentals-manual'.",
        "help - Displays a help message.",
        "javaToolchains - Displays the detected java toolchains.",
        "outgoingVariants - Displays the outgoing variants of root project 'gradle-fundamentals-manual'.",
        "projects - Displays the sub-projects of root project 'gradle-fundamentals-manual'.",
        "properties - Displays the properties of root project 'gradle-fundamentals-manual'.",
        "tasks - Displays the tasks runnable from root project 'gradle-fundamentals-manual'.",
        "```",
        "",
        "Gradle comes with some tasks, as you can see. Do not worry much about these yet. We will go through the most common",
        "tasks later on.",
        "",
        "Notice that Gradle is using the directory's name as the project name.",
        "",
        "```",
        "Tasks runnable from root project 'gradle-fundamentals-manual'",
        "```",
        "",
        "While this is good, it is better to configure the project's name as this makes the project independent of the",
        "directories name.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "question",
      "id": "86ee499f-91fd-4dcb-8a4a-ee78faefed29",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Question:2",
        "Why is that important?",
        "",
        "Answer:5",
        "When you clone a repository, you can pick the directory you like. Other programmers may us a different directory name",
        "than you have. Some tasks use the project name as their default value. For example when you create",
        "a [Jar file](https://docs.oracle.com/en/java/javase/17/docs/specs/jar/jar.html), unless otherwise specified, the Jar",
        "file will have the name of the project. This may break other things that rely on the Jar file to have a specific name. ",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "git-apply-patch",
      "id": "7e070414-864f-4e1a-aefc-253bb925066d",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "diff --git a/settings.gradle b/settings.gradle",
        "index e69de29..3942fe6 100644",
        "--- a/settings.gradle",
        "+++ b/settings.gradle",
        "@@ -0,0 +1 @@",
        "+rootProject.name = 'gradle-fundamentals-manual'",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "question",
      "id": "f463b8ea-d829-4dcf-b42f-87a84031703d",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Question:2",
        "Why did we use the `'` (single quote) to wrap the string and not `\"` (double quotes)?",
        "",
        "Answer:12",
        "Groovy, the programming language we are using, supports both. Anything wrapped between `'` or `\"` is considered as",
        "string. Groovy also supports [string interpolation](https://groovy-lang.org/syntax.html#_string_interpolation). Strings",
        "within the `'` are treated as raw strings and are not interpolated, while strings within the `\"` are. Consider the",
        "following example",
        "",
        "```",
        "def name = 'Albert Attard'",
        "println \"Hello ${name}\"",
        "```",
        "",
        "The string `\"Hello ${name}\"` will be interpolated and the message `Hello Albert Attard` will be printed instead.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "6fc1a9c9-14ee-4ed0-98ba-5477f26a5a07",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "If we list the files and the directories under our directory, we will see a `.gradle` directly.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "b1ba00d3-45c6-4c59-b122-37024acb6595",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "ls -la"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "efd34765-b4aa-4b15-8335-267b1aee6641",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Gradle uses the `.gradle` directory under the project's root directory as project specific cache directory. More",
        "information about the Gradle project structure can be",
        "found [here](https://docs.gradle.org/current/userguide/directory_layout.html#dir:project_root).",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "a411a48c-f50d-45c7-b56f-8ed31c15bab3",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "tree '.gradle'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "8362222f-c5cf-4ce5-9a30-f5cbaee3f84c",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "This directory should not go into the version control (Git) and we should ignore it.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "de59de60-4ead-4df2-8bbc-5bb8eb578283",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "touch '.gitignore'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "cfda812e-f3bc-47fd-968e-c1885e972d37",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "We will also ignore the following directories from source version control",
        "",
        "- `build` - Used by Gradle to store the build output. When we compile code, for example, the compiled code is saved",
        "  under this directory and this should not be committed to version control. This is equivalent to the `target` directory",
        "  for Maven, if you have Maven background.",
        "- `.idea` - Used by [IntelliJ](https://www.jetbrains.com/idea/)",
        "- `.vscode` - Used by [VS Code](https://code.visualstudio.com/)",
        "- `bin` - Used by some VS Code plugins to store the compiler output. These VS code plugins act similarly to Gradle and",
        "  assist us by compiling the code for us, for example. Their output is saved under the `bin` folder.",
        "",
        "While we may not be using all of these, it's a good idea to ignore them nevertheless, given that these files should not",
        "be version controlled.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "git-apply-patch",
      "id": "294317cd-c05d-4ea2-9fe8-1c9a2fddfb42",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "diff --git a/.gitignore b/.gitignore",
        "index e69de29..92b4736 100644",
        "--- a/.gitignore",
        "+++ b/.gitignore",
        "@@ -0,0 +1,5 @@",
        "+.gradle",
        "+.idea",
        "+.vscode",
        "+bin",
        "+build",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "63744021-d1c4-418c-a9ba-fa6c2f150870",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Let's list the files and directories that are under version control.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "1e8c087b-846a-4aa9-9b88-32181f04894c",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "git status"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "db0e7962-bee6-4928-b38f-7f177fed2359",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "We are now all set and can add both the `.gitignore` and the `settings.gradle` files and commit them.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "0c0d029f-95e1-4544-b753-839bcdb15a8e",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "git add .",
        "git commit --message 'Create gradle project'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "section",
      "id": "d3271d57-072d-4f7e-9c52-b128806b1c3f",
      "parameters": [
        "The build.gradle file"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "126a0b03-ead3-4fb4-8b11-22d85ab74d6a",
      "parameters": [
        "Gradle tasks are defined in a file named `build.gradle`, referred to as the _Gradle build script_.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "953dddcf-09d5-4e47-a6de-f5d76a23dc41",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "touch 'build.gradle'",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "39e11a0e-fa2c-4d8d-b6f7-dd45769bbae9",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Let's create a very simple task, as shown in the [_hello",
        "world_](https://docs.gradle.org/current/userguide/tutorial_using_tasks.html#sec:hello_world) example, in the",
        "[_Build Script Basics_](https://docs.gradle.org/current/userguide/tutorial_using_tasks.html) chapter.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "git-apply-patch",
      "id": "b786d36e-7fbd-4e23-9a1c-728adc40c06a",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "diff --git a/build.gradle b/build.gradle",
        "index e69de29..9746160 100644",
        "--- a/build.gradle",
        "+++ b/build.gradle",
        "@@ -0,0 +1,5 @@",
        "+tasks.register('hello') {",
        "+    doLast {",
        "+        println 'Hello Gradle'",
        "+    }",
        "+}",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "9d936f80-718f-4c6c-9465-201a6de621be",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "The `tasks` variable is an object of",
        "type [`TaskContainer`](https://docs.gradle.org/current/javadoc/org/gradle/api/tasks/TaskContainer.html), responsible",
        "from handling tasks.",
        "The [`register()`](https://docs.gradle.org/current/javadoc/org/gradle/api/tasks/TaskContainer.html#register-java.lang.String-)",
        "method, different from",
        "the [`create()`](https://docs.gradle.org/current/javadoc/org/gradle/api/tasks/TaskContainer.html#create-java.lang.String-)",
        "method, provides a lazy way to create tasks. There are different ways how a Gradle task can be created. This is the",
        "recommended way as the task is only created when needed. This becomes apparent in projects with large build scripts.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "question",
      "id": "770997d7-dae5-4b6c-a6a6-ab0bbb8355ca",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Question:2",
        "Why is lazy initialisation important?",
        "",
        "Answer:4",
        "There are times when tasks load their configuration from files, which tend to take longer to create as they interact",
        "with the IO. If all tasks are initialised, even those that are not required or used, then our task needs to",
        "unnecessarily wait for all tasks to be initialised, incurring unnecessarily delays.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "question",
      "id": "7c15bc11-ef9d-425e-bd96-1ea8baf3f50d",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Question:2",
        "What's the `doLast { }` block?",
        "",
        "Answer:7",
        "The [`doLast { }`](https://docs.gradle.org/current/dsl/org.gradle.api.Task.html#org.gradle.api.Task:doLast%28org.gradle.api.Action%29)",
        "block contains the execution logic of a given task. In our case, it is printing a simple message. This is one of the",
        "[hooks](https://docs.gradle.org/current/dsl/org.gradle.api.Task.html#N18DD1) that Gradle provides and as the name",
        "indicates, this is invoked as the last thing.",
        "The [`doFirst { }`](https://docs.gradle.org/current/dsl/org.gradle.api.Task.html#org.gradle.api.Task:doFirst%28org.gradle.api.Action%29),",
        "on the other hand, is invoked first as the name indicates.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "16cca94c-d5b2-4b20-9a98-40be194ef598",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Let's take our task for a spin.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "06473c6b-3f03-4e9d-94e7-69ef019b5f83",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "gradle hello"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "cfcd45b2-7e2e-481c-9086-c04d6ad9131f",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "We named our tasks, `hello`, not very original. We can invoke it through its name. When a task is executed and produces",
        "output, gradle prints this under the task's name as shown next.",
        "",
        "```",
        "> Task :hello",
        "Hello Gradle",
        "```",
        "",
        "Printing output is not very common and not that much useful, but it's an easy way to start.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "question",
      "id": "cc6187bc-4e3b-47b4-b0e4-fb81a79d182f",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Question:3",
        "Can we run more than one task?",
        "",
        "",
        "Answer:5",
        "Yes, we can run many tasks. Furthermore, a Gradle task may depend on another task, in which case both will run even if",
        "we invoke only one. For example, as that we have the tasks _a_ and _b_, when _b_ depends on _a_. If we run task _b_,",
        "both tasks _a_ and _b_ will be executed. If, on the other hand, we invoke task _a_, then only task _a_ is executed as",
        "this does not depend on any other task.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "fdefb9e4-24e2-4686-9d0d-19aad67a8c42",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Gradle provides a list of tasks that are available to this project. The `hello` task is only available to this project",
        "as it is defined within this project's `build.gradle` file. Furthermore, the tasks names within a project need to be",
        "unique as otherwise Gradle will not be able to tell them apart. Let's list the available Gradle tasks for this project.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "f00ad3ee-7cb5-432f-b55c-baaf4b5ba277",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "gradle tasks"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "f731cad6-7685-419c-90f2-b99e4b391821",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Unfortunately, our tasks is not listed here. Let's use the `--all` argument to print all the tasks, as indicated.",
        "",
        "```",
        "To see all tasks and more detail, run gradle tasks --all",
        "```",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "72414b9b-8e14-42e3-9642-cea72c958d14",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "gradle tasks --all"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "67ed76ea-3e32-413d-a1a0-35127a6d68e1",
      "parameters": [
        "Our `hello` task is listed in the _Other tasks_ section (referred to as _group_).",
        "",
        "```",
        "Other tasks",
        "-----------",
        "components - Displays the components produced by root project 'gradle-fundamentals-manual'. [deprecated]",
        "dependentComponents - Displays the dependent components of components in root project 'gradle-fundamentals-manual'. [deprecated]",
        "hello",
        "```",
        "",
        "Also note that the other tasks have a description, while our `hello` tasks does not. Let's add our task to a group and",
        "provide it a description.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "git-apply-patch",
      "id": "35943084-bf5e-4c1a-b4f9-37553bcc107f",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "diff --git a/build.gradle b/build.gradle",
        "index a6bcd65..5a7c0d3 100644",
        "--- a/build.gradle",
        "+++ b/build.gradle",
        "@@ -1,4 +1,6 @@",
        " tasks.register('hello') {",
        "+    group = 'Greetings'",
        "+    description = 'A simple task that prints a simple message'",
        "     doLast {",
        "         println 'Hello Gradle'",
        "     }",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "1e22ac7a-c81a-4360-999e-7f48929a745a",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Let's list the project's tasks again.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "a551d74c-d212-4325-b989-03b36d271e26",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "gradle tasks"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "7354f9af-aa44-4b40-aaaa-928330dd00d1",
      "parameters": [
        "Note that now there is a new group, _Greetings tasks_, that contains our task, as shown next.",
        "",
        "```",
        "Greetings tasks",
        "-----------",
        "hello - A simple task that prints a simple message",
        "```",
        "",
        "This is a good point to stop and commit our changes.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "6662f269-c9bd-4e16-ba7a-d21349c55345",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "git add .",
        "git commit --message 'Add hello gradle task'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "section",
      "id": "a176ddf4-eb2f-4e8b-853d-562eddd8ecc6",
      "parameters": [
        "Gradle Build phases"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "e155f3b0-1dd4-47ae-b914-34d01a15b3b4",
      "parameters": [
        "Gradle has three [build phases](https://docs.gradle.org/current/userguide/build_lifecycle.html#sec:build_phases)",
        "",
        "- **Initialization** - Gradle supports single and multi-project builds. During the initialization phase, Gradle",
        "  determines which projects are going to take part in the build, and creates a Project instance for each of these",
        "  projects. The `settings.gradle` file is evaluated during this process.",
        "",
        "- **Configuration** - During this phase the project objects are configured. The build scripts, `build.gradle`, of all",
        "  projects which are part of the build are executed.",
        "",
        "- **Execution** - Gradle determines the subset of the tasks, created and configured during the configuration phase, to",
        "  be executed. The subset is determined by the task name arguments passed to the gradle command and the current",
        "  directory. Gradle then executes each of the selected tasks.",
        "",
        "This section covers these phases and compares between lazy and eager task creation. Let's start by tagging our progress",
        "so that we can always go back to this point in time and replay these steps.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "b56a61fb-58c0-4bad-a782-e8926a9d054e",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "git tag --annotate 'v1' --message 'Gradle Build phases'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "a4d4d3d9-1638-4273-8d30-5bc8fbe1e14c",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Let's introduce `println` statements at various places so that we can observe when these are printed.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "git-apply-patch",
      "id": "3484cce8-d301-4ec7-8502-242f17732636",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "diff --git a/build.gradle b/build.gradle",
        "index dfe14df..3932cf8 100644",
        "--- a/build.gradle",
        "+++ b/build.gradle",
        "@@ -1,7 +1,10 @@",
        "+println 'The configuration build phase'",
        "+",
        " tasks.register('hello') {",
        "+    println 'The configuration build phase (from within the hello task)'",
        "     group = 'Greetings'",
        "     description = 'A simple task that prints a simple message'",
        "     doLast {",
        "-        println 'Hello Gradle'",
        "+        println 'The execution build phase (from within the hello task)'",
        "     }",
        " }",
        "diff --git a/settings.gradle b/settings.gradle",
        "index 2f9c8e7..19ee5f2 100644",
        "--- a/settings.gradle",
        "+++ b/settings.gradle",
        "@@ -1 +1,3 @@",
        " rootProject.name = 'gradle-fundamentals-manual'",
        "+",
        "+println 'The initialization build phase'",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "1a9999ae-e28e-47f7-8999-ffd60eba9c01",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Now let's run our `hello` tasks again.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "f3c16fc9-3514-45c2-a524-aff29364c88a",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "gradle hello"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "4900fa69-0973-4d27-b030-c71c68d2689a",
      "parameters": [
        "The output from the `println` statements are all shown in the output.",
        "",
        "```",
        "The initialization build phase",
        "",
        "> Configure project :",
        "The configuration build phase",
        "The configuration build phase (from within the hello task)",
        "",
        "> Task :hello",
        "The execution build phase (from within the hello task)",
        "",
        "BUILD SUCCESSFUL in 1s",
        "1 actionable task: 1 executed",
        "```",
        "",
        "The initialization phase (the configuration within the `settings.gradle` file) goes first.",
        "",
        "```",
        "The initialization build phase",
        "```",
        "",
        "The build phase (the configuration within the `build.gradle` file) is next. Note that the `println` statement within",
        "the `tasks.register('hello') { }` block is evaluated, but not the `println` statement within the `doLast { }` block.",
        "",
        "```",
        "> Configure project :",
        "The configuration build phase",
        "The configuration build phase (from within the hello task)",
        "```",
        "",
        "The execution phase goes last. This is when the content within the `doLast { }` block is executed.",
        "",
        "```",
        "> Task :hello",
        "The execution build phase (from within the hello task)",
        "```",
        "",
        "The execution logic goes in the `doLast { }` block, while the configuration of the task goes within",
        "the `tasks.register('hello') { }` block.",
        "",
        "Let's commit our progress, before proceeding any further.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "0cf91b55-5602-4f10-a0a0-fd1f359af7d7",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "git add .",
        "git commit --message 'Print message for each build phase'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "e450b0bd-96eb-40d6-bad7-0b85de3ccff2",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Let's register a new task.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "git-apply-patch",
      "id": "348c720c-ba65-4b1d-8a17-880badd83597",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "diff --git a/build.gradle b/build.gradle",
        "index 9ffcfb1..f7744fd 100644",
        "--- a/build.gradle",
        "+++ b/build.gradle",
        "@@ -8,3 +8,12 @@ tasks.register('hello') {",
        "         println 'The execution build phase (from within the hello task)'",
        "     }",
        " }",
        "+",
        "+tasks.register('bye') {",
        "+    println 'The configuration build phase (from within the bye task)'",
        "+    group = 'Greetings'",
        "+    description = 'A simple task that prints a simple message'",
        "+    doLast {",
        "+        println 'The execution build phase (from within the bye task)'",
        "+    }",
        "+}",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "49f9e8aa-847b-4f91-9408-035c3ea4cb1e",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Now we have two tasks.  Let's run the `hello` task again and see what's executed and when.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "bd8b9df2-62e4-4c41-9746-a00422e322aa",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "gradle hello"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "a286cf19-7877-4811-a13f-d8d10303382e",
      "parameters": [
        "Note that none of the `println` statements within the new task, `bye` were printed.",
        "",
        "```",
        "The initialization build phase",
        "",
        "> Configure project :",
        "The configuration build phase",
        "The configuration build phase (from within the hello task)",
        "",
        "> Task :hello",
        "The execution build phase (from within the hello task)",
        "```",
        "",
        "That's because the `bye` task was added using a lazy approach, the `register()` method instead of the `create()` method",
        "or other eager approaches. Let's change the `bye` task configuration into using an",
        "eager, [an older](https://docs.gradle.org/current/dsl/org.gradle.api.Project.html#org.gradle.api.Project:task%28java.lang.String%29),",
        "approach.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "git-apply-patch",
      "id": "b8713710-a118-43ec-841e-1d80365ced0c",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "diff --git a/build.gradle b/build.gradle",
        "index f7744fd..cd1ae02 100644",
        "--- a/build.gradle",
        "+++ b/build.gradle",
        "@@ -9,7 +9,7 @@ tasks.register('hello') {",
        "     }",
        " }",
        " ",
        "-tasks.register('bye') {",
        "+task bye() {",
        "     println 'The configuration build phase (from within the bye task)'",
        "     group = 'Greetings'",
        "     description = 'A simple task that prints a simple message'",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "5c0d1686-121c-437e-96ce-0b396b0e62c4",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Let's run the `hello` tasks again and observe the output.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "04e259ed-db86-45fd-bcae-8a4e67ce877c",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "gradle hello"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "d26d6d82-c88f-4a28-b82a-bb9cf9cb7725",
      "parameters": [
        "This time, the `println` statement within then `task bye() { }` is executed.",
        "",
        "```",
        "The initialization build phase",
        "",
        "> Configure project :",
        "The configuration build phase",
        "The configuration build phase (from within the hello task)",
        "The configuration build phase (from within the bye task)",
        "",
        "> Task :hello",
        "The execution build phase (from within the hello task)",
        "```",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "question",
      "id": "89a51bb7-de0f-4382-a141-621281dc8530",
      "parameters": [
        "Question:2",
        "Why is this a problem?",
        "",
        "Answer:3",
        "Let say that the `bye` task's configuration is slow as it accesses the filesystem, for example. This will also impact",
        "the execution of the `hello` task even when the `bye` task is not invoked or required.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "f90f8f6b-9889-4707-af1f-2277f4ed884b",
      "parameters": [
        "Let's simulate this by using an artificial delay of 5 seconds (5000 milliseconds) and try it out.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "git-apply-patch",
      "id": "6e2fb1e6-748d-44ac-b6a2-377fa635c851",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "diff --git a/build.gradle b/build.gradle",
        "index 0c007db..340e285 100644",
        "--- a/build.gradle",
        "+++ b/build.gradle",
        "@@ -16,4 +16,5 @@ task bye() {",
        "     doLast {",
        "         println 'The execution build phase (from within the bye task)'",
        "     }",
        "+    sleep 5000",
        " }",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "d6212c78-203b-4f23-aa2e-5be88d40589a",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Please note that, while you are free to use any delay you like, the following command has a 10 seconds timeout.",
        "Using a higher artificial delay will cause the command to fail with a timeout.",
        "",
        "Now, let's run the `hello` task one more time.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "943bc603-778e-4226-b6d8-62ff1952ab05",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "gradle hello"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {},
      "commandTimeout": 10.000000000
    },
    {
      "type": "markdown",
      "id": "bbd9ed83-e41e-4a98-a8a0-fb08166e93fd",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "This time Gradle took longer to run the `hello` task.",
        "",
        "```",
        "BUILD SUCCESSFUL in 5s",
        "```",
        "",
        "Previous runs took less than a second to complete",
        "",
        "```",
        "BUILD SUCCESSFUL in 1s",
        "```",
        "",
        "Let's revert our changes and use the `register()` method instead and keep the artificial delay.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "git-apply-patch",
      "id": "f462b909-559e-4e2e-8227-a3589fa82fca",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "diff --git a/build.gradle b/build.gradle",
        "index 9f760c9..8ee38d2 100644",
        "--- a/build.gradle",
        "+++ b/build.gradle",
        "@@ -9,7 +9,7 @@ tasks.register('hello') {",
        "     }",
        " }",
        " ",
        "-task bye() {",
        "+tasks.register('bye') {",
        "     println 'The configuration build phase (from within the bye task)'",
        "     group = 'Greetings'",
        "     description = 'A simple task that prints a simple message'",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "99f38e44-06e7-4a41-ac7b-10a1cbc3cd3f",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Now let's run the `hello` Gradle task again. Remember that the `bye` Gradle task still has the artificial delay of 5",
        "seconds.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "e8869b97-a740-4404-b76b-1e6b8d02141c",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "gradle hello"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "6447a82b-bf2d-49a1-93cd-d281ae624725",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Note that this time, Gradle was not affected by the artificial delay that we introduce to the `bye` Gradle task.",
        "",
        "```",
        "BUILD SUCCESSFUL in 1s",
        "```",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "question",
      "id": "ab1786db-b680-4062-9a63-8551f74f79f8",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Question:2",
        "What happens when we execute the `bye` Gradle task?",
        "",
        "Answer:3",
        "Gradle will evaluate the `bye` task's configuration and will have to wait for it to completes. In this case, Gradle",
        "has to wait 5 seconds before executing the `bye` task.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "1b9316b1-8ed4-4399-94a7-1e4b13dba6a3",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Let's clean our examples and delete the unnecessary `println` statements and artificial delay.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "git-apply-patch",
      "id": "ba83fc59-b06f-430c-8935-2e79e48227b6",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "diff --git a/build.gradle b/build.gradle",
        "index 8ee38d2..02f948d 100644",
        "--- a/build.gradle",
        "+++ b/build.gradle",
        "@@ -1,20 +1,15 @@",
        "-println 'The configuration build phase'",
        "-",
        " tasks.register('hello') {",
        "-    println 'The configuration build phase (from within the hello task)'",
        "     group = 'Greetings'",
        "     description = 'A simple task that prints a simple message'",
        "     doLast {",
        "-        println 'The execution build phase (from within the hello task)'",
        "+        println 'Hello Gradle'",
        "     }",
        " }",
        " ",
        " tasks.register('bye') {",
        "-    println 'The configuration build phase (from within the bye task)'",
        "     group = 'Greetings'",
        "     description = 'A simple task that prints a simple message'",
        "     doLast {",
        "-        println 'The execution build phase (from within the bye task)'",
        "+        println 'See you later, Gradle'",
        "     }",
        "-    sleep 5000",
        " }",
        "diff --git a/settings.gradle b/settings.gradle",
        "index 19ee5f2..2f9c8e7 100644",
        "--- a/settings.gradle",
        "+++ b/settings.gradle",
        "@@ -1,3 +1 @@",
        " rootProject.name = 'gradle-fundamentals-manual'",
        "-",
        "-println 'The initialization build phase'",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "678ab1bf-4634-4698-b31b-04628ef20f95",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Let's run both tasks, to make sure that we didn't break anything by mistake.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "c3bc2486-bf03-4763-85e4-cbe2a619c893",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "gradle hello bye"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "2ff42333-a031-428e-b790-9b6e19c500cb",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Now that we have both tasks ready, let's commit our changes.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "1ada9223-4688-4cee-a307-bbf0e4cfe8b5",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "git add .",
        "git commit --message 'Add bye gradle task'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "section",
      "id": "687310b1-7e5b-4cea-a2e8-7b925672a609",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Task dependencies and ordering"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "a3bbab56-0192-4888-8845-0dbc9f857fc2",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Dependencies between task is can be set by",
        "the [`dependsOn`](https://docs.gradle.org/current/javadoc/org/gradle/api/Task.html#dependsOn-java.lang.Object...-)",
        "and [`finalizedBy`](https://docs.gradle.org/current/javadoc/org/gradle/api/Task.html#finalizedBy-java.lang.Object...-)",
        "while [`mustRunAfter`](https://docs.gradle.org/current/javadoc/org/gradle/api/Task.html#mustRunAfter-java.lang.Object...-)",
        "and",
        "[`shouldRunAfter`](https://docs.gradle.org/current/javadoc/org/gradle/api/Task.html#shouldRunAfter-java.lang.Object...-)",
        "are used to specify ordering between tasks.",
        "",
        "Let's tag our progress before we start.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "4edf3fa3-fbaa-4b16-b702-6a4800fd04c8",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "git tag --annotate 'v2' --message 'Task dependencies and ordering'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "89361b7b-5942-4178-956d-0efe41eb6221",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Let's make the Gradle task `bye` depends on `hello`. This means that when we run the `bye` task, the `hello` task is",
        "executed as well, even if it is not included in the list of tasks.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "git-apply-patch",
      "id": "4d2f6232-5e0a-47bd-bf51-d93565a68505",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "diff --git a/build.gradle b/build.gradle",
        "index 02f948d..c6a5051 100644",
        "--- a/build.gradle",
        "+++ b/build.gradle",
        "@@ -12,4 +12,5 @@ tasks.register('bye') {",
        "     doLast {",
        "         println 'See you later, Gradle'",
        "     }",
        "+    dependsOn tasks.named('hello')",
        " }",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "ece953a1-5393-4bcd-ae1e-af0ed8746b45",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "gradle bye"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "55ad5607-3cfe-4b52-92e6-d1eb11793a8f",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Even though we only ran the `bye` Gradle task, both the `hello` and `bye` Gradle tasks are executed.",
        "",
        "```",
        "> Task :hello",
        "Hello Gradle",
        "",
        "> Task :bye",
        "See you later, Gradle",
        "```",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "question",
      "id": "bd0aefb8-fc94-42ff-86ec-cae0da81d259",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Question:2",
        "Why do we need to have a task depending on another?",
        "",
        "Answer:5",
        "One task may depend on the output of another task. Say we want to run the tests of a Java application (call it the",
        "_run test_ task). We first need to compile the code (call it the _compile code_ task). The _run test_ task will have to",
        "depend on the _compile code_ task as otherwise it cannot run. The tests will run on the compiled code, and without the",
        "compiled code, there are no tests to run.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "90386ecf-8c7a-4e44-a8e7-fc3b849c62ce",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "We can define the task execution, and having one task to be executed before another. For example, if both the `hello`",
        "and `bye` Gradle tasks are executed, we can set the `hello` to run before the `bye`. Let's revert our last change for",
        "now.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "git-apply-patch",
      "id": "503b51fd-8b19-47a9-a06a-77de5fdf5a49",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "diff --git a/build.gradle b/build.gradle",
        "index c6a5051..02f948d 100644",
        "--- a/build.gradle",
        "+++ b/build.gradle",
        "@@ -12,5 +12,4 @@ tasks.register('bye') {",
        "     doLast {",
        "         println 'See you later, Gradle'",
        "     }",
        "-    dependsOn tasks.named('hello')",
        " }",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "2094f4f8-ebcc-49be-ae49-7f2af7b1e919",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Now, let's execute both tasks.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "71b7ee41-e4d5-4d7d-9d52-3f713046f96a",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "gradle bye hello"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "0c0b9cc8-f781-4d18-a6e8-fd0460f32686",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "The tasks are executed in the given order.",
        "",
        "```",
        "> Task :bye",
        "See you later, Gradle",
        "",
        "> Task :hello",
        "Hello Gradle",
        "```",
        "",
        "We can control that, by using the `mustRunAfter`, as shown next.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "git-apply-patch",
      "id": "2725b7c4-27d8-4106-b021-b1f111ae6a63",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "diff --git a/build.gradle b/build.gradle",
        "index 02f948d..ba3aec3 100644",
        "--- a/build.gradle",
        "+++ b/build.gradle",
        "@@ -12,4 +12,5 @@ tasks.register('bye') {",
        "     doLast {",
        "         println 'See you later, Gradle'",
        "     }",
        "+    mustRunAfter tasks.named('hello')",
        " }",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "07286b75-c6dd-41fe-86ba-ae04c083c93d",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Now let's run the `bye` task.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "e9e4df1e-5bd8-4c59-8bb2-6c031d3561f9",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "gradle bye"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "f2d9fd8c-6400-4778-b291-07b3a260ad17",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Only the `bye` Gradle task is executed.",
        "",
        "```",
        "> Task :bye",
        "See you later, Gradle",
        "```",
        "",
        "Now, let's execute both the `bye` and the `hello` tasks in this order.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "9a138abd-b530-4594-a005-c8cf8e8e0fd5",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "gradle bye hello"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "85b9f229-27de-415c-a344-d66ed083418f",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Note that if both the `hello` and `bye` tasks are executed, the `hello` task will be executed before the `bye` task, as",
        "shown next.",
        "",
        "```",
        "> Task :hello",
        "Hello Gradle",
        "",
        "> Task :bye",
        "See you later, Gradle",
        "```",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "question",
      "id": "4e39f4f9-14c7-44e3-967a-21688b8fd21d",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Question:2",
        "What is the difference between `mustRunAfter` and `shouldRunAfter`?",
        "",
        "Answer:13",
        "This is well described in",
        "the [documentation](https://docs.gradle.org/current/userguide/more_about_tasks.html#sec:ordering_tasks).",
        "",
        "> There are two ordering rules available: '_must run after_' and '_should run after_'.",
        ">",
        "> When you use the 'must run after' ordering rule you specify that `taskB` must always run after `taskA`, whenever",
        "> both `taskA` and `taskB` will be run. This is expressed as `taskB.mustRunAfter(taskA)`. The 'should run after'",
        "> ordering rule is similar but less strict as it will be ignored in two situations. Firstly if using that rule",
        "> introduces an ordering cycle. Secondly when using parallel execution and all dependencies of a task have been",
        "> satisfied apart from the 'should run after' task, then this task will be run regardless of whether its",
        "> 'should run after' dependencies have been run or not. You should use 'should run after' where the ordering is",
        "> helpful but not strictly required.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "0f80755e-d6bc-4586-b887-67b69602dbfe",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "We can instruct Gradle to run a task (say _a_) after another task (say _b_) even if that task (_a_) is not executed,",
        "using the `finalizedBy`, as shown next.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "git-apply-patch",
      "id": "4a6c07cb-865c-4fbb-8ae5-40325f454fc0",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "diff --git a/build.gradle b/build.gradle",
        "index ba3aec3..fb73c9e 100644",
        "--- a/build.gradle",
        "+++ b/build.gradle",
        "@@ -4,6 +4,7 @@ tasks.register('hello') {",
        "     doLast {",
        "         println 'Hello Gradle'",
        "     }",
        "+    finalizedBy tasks.named('bye')",
        " }",
        " ",
        " tasks.register('bye') {",
        "@@ -12,5 +13,4 @@ tasks.register('bye') {",
        "     doLast {",
        "         println 'See you later, Gradle'",
        "     }",
        "-    mustRunAfter tasks.named('hello')",
        " }",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "7d466d52-785d-49b6-a0f1-05e807b8ffc9",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "We removed the `mustRunAfter` from the `bye` task and added the `finalizedBy` to the `hello` task. Now let's run",
        "the `hello` task alone.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "793ff822-b4f3-49c8-9fa2-bd8483f510ca",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "gradle hello"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "e23a5863-e1ae-4c87-a438-426a53d3091a",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Both tasks are executed, as shown next, even if the `bye` task is not included in the list of tasks to be executed.",
        "",
        "```",
        "> Task :hello",
        "Hello Gradle",
        "",
        "> Task :bye",
        "See you later, Gradle",
        "```",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "question",
      "id": "eeae9799-9e48-491d-89b4-9dd3a4f9dfbc",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Question:2",
        "Where can we use this?",
        "",
        "Answer:17",
        "One place I saw this used was with code coverage. After running the tests, we run the code coverage report using",
        "the `finalizedBy`, as shown in [The JaCoCo Plugin](https://docs.gradle.org/current/userguide/jacoco_plugin.html)",
        "documentation, from where the following example was copied.",
        "",
        "```",
        "test {",
        "    finalizedBy jacocoTestReport // report is always generated after tests run",
        "}",
        "jacocoTestReport {",
        "    dependsOn test // tests are required to run before generating the report",
        "}",
        "```",
        "",
        "The `jacocoTestReport` task depends on the `test` task, which means that if you run the `jacocoTestReport` task,",
        "the `test` task is executed too. On the other hand, if we run the `test` task, then the `jacocoTestReport` task is also",
        "executed after the `test` task.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "babf7008-716d-4712-bf40-a1ea424d9a6e",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "This wraps up dependencies and ordering. Let's revert these changes before moving on to the next section.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "git-apply-patch",
      "id": "27aaf0f0-9c84-449b-8b42-bfdde79c8fd2",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "diff --git a/build.gradle b/build.gradle",
        "index fb73c9e..02f948d 100644",
        "--- a/build.gradle",
        "+++ b/build.gradle",
        "@@ -4,7 +4,6 @@ tasks.register('hello') {",
        "     doLast {",
        "         println 'Hello Gradle'",
        "     }",
        "-    finalizedBy tasks.named('bye')",
        " }",
        " ",
        " tasks.register('bye') {",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "3636488c-0b64-434c-9962-22649d314411",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "The code is as it was at the beginning of the section, thus we have nothing to commit.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "section",
      "id": "2777fbe3-3a87-436f-8847-ea373cf41b9c",
      "parameters": [
        "The Gradle Wrapper"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "3bccfea7-64be-4cfb-aead-0e1dfcc73a88",
      "parameters": [
        "So far we relied on the installed Gradle. While that usually suffice, it is better that everyone working on the same",
        "project, including the build pipeline, use the same version of Gradle. Gradle provides",
        "a [wrapper](https://docs.gradle.org/current/userguide/gradle_wrapper.html), which can be thought of a portable version",
        "of Gradle, included with the project. Instead of using the installed version of Gradle, we will use the wrapper instead",
        "which will ensure that the same version of Gradle is used irrespective from where it is executed.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "question",
      "id": "720e77e8-414d-452f-aad0-2813c69069f9",
      "parameters": [
        "Question:3",
        "Why is this important?",
        "",
        "",
        "Answer:6",
        "Gradle is not 100% backwards compatible. Gradle 7",
        "introduced [breaking changes](https://docs.gradle.org/7.0/userguide/upgrading_version_6.html#changes_7.0), and what",
        "worked with Gradle 6 may not necessary works on Gradle 7. Another programmer may introduce new Gradle features which",
        "will not work on previous version of Gradle. For example, Java 17 is only supported starting from Gradle 7.3 as shown in",
        "the [compatibility matrix](https://docs.gradle.org/current/userguide/compatibility.html).",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "question",
      "id": "c22b39a8-a975-4d3e-85b2-b19facbe4da3",
      "parameters": [
        "Question:4",
        "Do we need to have Gradle installed if we use the Gradle wrapper?",
        "",
        "",
        "",
        "Answer:5",
        "No, the Gradle wrapper is independent of the local Gradle and one is not required to be installed. This is great as we",
        "need to maintain one less programs. We don't need to maintain all the programmer's computers or pipelines. We can",
        "upgrade the Gradle version in one place, commit those changes and then everyone else will get the new changes, very",
        "similar to [infrastructure as code](https://en.wikipedia.org/wiki/Infrastructure_as_code).",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "a782f0e5-3379-4e0d-a386-95b008917ed1",
      "parameters": [
        "Let's start by tagging the current state of the project before we start with the Gradle wrapper.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "0328858d-3f8e-4cf6-a20d-a08e25d1dc74",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "git tag --annotate 'v3' --message 'Gradle Wrapper'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "8e556a7b-8b47-40b6-ae56-75b101b4bc5e",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "The Gradle wrapper can be added using the `wrapper` task.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "fa351d4b-2336-408f-acee-eaec2ac4dcf4",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "gradle tasks"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "fc780751-9c70-46f9-a3b0-da7a058789e4",
      "parameters": [
        "The `wrapper` task is listed under the _Build Setup tasks_ group together with the `init` task.",
        "",
        "```",
        "Build Setup tasks",
        "-----------------",
        "init - Initializes a new Gradle build.",
        "wrapper - Generates Gradle wrapper files.",
        "```",
        "",
        "Let's run the `wrapper` task",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "fd20bfa0-2838-46d2-a74f-592a8a8b9441",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "gradle wrapper"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "3186b75e-3923-4228-aecf-97327dd2d758",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "The Gradle wrapper is found in a folder named `gradle`. Let's see the folder structure of our project after the Gradle",
        "wrapper was created.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "91f71f31-3844-4327-980a-f5c5e953ed88",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "tree ."
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "7202981d-6f00-42d5-a071-b17786753820",
      "parameters": [
        "Together to our `setting.gradle` and `build.gradle` files, now we also have the Gradle wrapper related files.",
        "",
        "```",
        ".",
        "|-- build.gradle",
        "|-- gradle",
        "|   `-- wrapper",
        "|       |-- gradle-wrapper.jar",
        "|       `-- gradle-wrapper.properties",
        "|-- gradlew",
        "|-- gradlew.bat",
        "`-- settings.gradle",
        "",
        "2 directories, 6 files",
        "```",
        "",
        "Two new scripts are added, the `gradlew` (Mac/Linux) and the `gradlew.bat` (Windows) scripts. These two scripts can be",
        "used to invoke Gradle commands. For example, instead of invoking the `gradle tasks` to list the tasks that belong to",
        "this Gradle project, we can use the wrapper instead as shown next.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "440aea7c-e1bf-476e-8d46-676d7f8614de",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "./gradlew tasks"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "68ae629d-d0f9-4204-aa0d-218dba83c7eb",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "We will use the Gradle wrapper moving forward.",
        "",
        "The `gradle/wrapper/gradle-wrapper.properties` file contains the Gradle wrapper properties. We can define which version",
        "to use from this file. Let's see the contents of this file.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "252a9022-5526-4420-8958-b3c7fa4e838e",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "cat 'gradle/wrapper/gradle-wrapper.properties'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "6e5e9660-ae9b-4220-9288-334a38d000a7",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "The Gradle wrapper uses the same version of the local Gradle, 7.3.3 in our case as that's the version we have",
        "installed.",
        "",
        "```",
        "distributionUrl=https\\://services.gradle.org/distributions/gradle-7.3.3-bin.zip",
        "```",
        "",
        "We can check the Gradle wrapper version using the `--version` argument as shown next.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "4f0938ab-0cd3-45b2-8f3b-4c8ca3fbb733",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "./gradlew --version"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {},
      "commandTimeout": 300.000000000
    },
    {
      "type": "markdown",
      "id": "f983eebf-8458-478c-bf28-609055c92bd0",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "We are using Gradle version 7.3.3 as indicated by the output.",
        "",
        "```",
        "------------------------------------------------------------",
        "Gradle 7.3.3",
        "------------------------------------------------------------",
        "```",
        "",
        "We can adjust the Gradle wrapper version manually by updating the `gradle/wrapper/gradle-wrapper.properties` file, or",
        "using the `wrapper` task with the `--gradle-version` as its argument, as shown next.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "c9cc5666-8c45-4ba4-b732-d95d12b154fe",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "./gradlew wrapper --gradle-version=7.3"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {},
      "commandTimeout": 300.000000000
    },
    {
      "type": "markdown",
      "id": "665066d5-8380-40c7-a862-066a6ddfe096",
      "parameters": [
        "We set the version of Gradle to 7.3. Given that this is a new version, before running any commands Gradle will first",
        "download the binaries for this version of Gradle and cache it for the future runs. The next Gradle command will take a",
        "bit longer to execute for this reason.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "aface566-a2d2-4b9a-8811-3d9ee573b685",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "./gradlew --version"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {},
      "commandTimeout": 300.000000000
    },
    {
      "type": "markdown",
      "id": "0b268aa4-5b0f-4683-ac79-4f9761831484",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "If we look into the `gradle/wrapper/gradle-wrapper.properties` file, we will see that it's pointing to the new version.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "f87a390a-9ab0-416b-9853-5ae6a744cb4c",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "cat 'gradle/wrapper/gradle-wrapper.properties'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "729256a0-9f65-4c7e-b596-960b6309e278",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Let's go back to the latest version of Gradle.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "cd3c4abd-f827-4818-b32e-fd1611e11c12",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "./gradlew wrapper --gradle-version=7.3.3"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {},
      "commandTimeout": 30.000000000
    },
    {
      "type": "markdown",
      "id": "b483f7e0-8c68-46b4-b9db-79ef8635ed72",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Verify that we are using version 7.3.3 of Gradle.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "c30d1fae-7797-4e11-aa51-271b570f3813",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "./gradlew --version"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "9733b9fc-cd19-4fa2-8897-478aba2250ae",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Now we are back to version 7.3.3.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "question",
      "id": "f4ad84e0-9d55-4a92-a2c6-642c0e484ff8",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Question:2",
        "This was quick. How come Gradle did not download the version 7.3.3?",
        "",
        "Answer:16",
        "Gradle version 7.3.3 was downloaded before and saved in `~/.gradle/wrapper/dists` directory (unless otherwise configure)",
        ". If we list the contents of this directory we will find all cached Gradle binaries.",
        "",
        "```",
        "ls -l ~/.gradle/wrapper/dists",
        "```",
        "",
        "We worked with only two versions, 7.3 and 7.3.3.",
        "",
        "```",
        "drwxr-xr-x  3 albertattard  staff  96 Apr 27 12:34 gradle-7.3-bin",
        "drwxr-xr-x  3 albertattard  staff  96 Apr 27 12:34 gradle-7.3.3-bin",
        "```",
        "",
        "If you delete the contents of this directory, Gradle will re-download these binaries again automatically.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "question",
      "id": "f19a2f4a-87eb-4b86-bc8a-1dad11a49d22",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Question:4",
        "What's the difference between the installed Gradle and the Gradle Wrapper?",
        "",
        "",
        "",
        "Answer:3",
        "The Gradle wrapper is a program that automatically downloads the correct version of Gradle for us. The Gradle tasks",
        "executed by the Gradle wrapper, `./gradlew`, are handles in the same way as when we use the installed version of Gradle.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "question",
      "id": "50e0343a-4cb8-499e-870c-bd73e0274025",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Question:3",
        "Given that the Gradle Wrapper can do the same things the installed version of Gradle does, do we need to have Gradle",
        "installed locally?",
        "",
        "Answer:11",
        "The locally installed Gradle has one advantage over the Gradle wrapper. We can use the locally installed Gradle to",
        "create a project. So far we have created the project manually, but Gradle provided the",
        "built-in [`init` task](https://docs.gradle.org/current/dsl/org.gradle.buildinit.tasks.InitBuild.html) which can be used",
        "to create Gradle projects.",
        "",
        "An alternative approach is to have a blueprint repository that you contain the Gradle wrapper. Instead of creating the",
        "program using the `init` Gradle task, we can clone the blueprint repository.",
        "",
        "I prefer to have Gradle installed locally as I can quickly create the project I need. The Gradle `init` task is",
        "interactive and provides some neat options, such as choosing Kotlin over Groovy as the Gradle configuration language.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "0e156078-53fc-405b-9491-f148610c3cf8",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Let's add the Gradle wrapper to the version source control.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "53c23715-d8ca-405d-8cef-d0798a59bfe4",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "git add .",
        "git commit --message 'Add gradle wrapper'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "section",
      "id": "25105cb5-9823-4868-9354-994fc541cbb5",
      "parameters": [
        "Gradle Plugins"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "9cef064f-377b-4226-9c14-aa61f4e248ad",
      "parameters": [
        "So far we have only used the tasks that we have created. Gradle comes with many built-in tasks and there are a number of",
        "tasks developed and maintained by the community. If we want to compile Java code, we don't have to create a task that",
        "does that. All we need to do is to import the tasks.",
        "",
        "Before we start, let's start by tagging our code.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "55a81754-afa2-4b6f-b2c8-f6ba2b3fbc15",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "git tag --annotate 'v4' --message 'Gradle Plugins'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "fd7ba73e-9acc-4fcb-bee7-79d4df49eb4b",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Tasks are part of a [plugin](https://docs.gradle.org/current/userguide/plugins.html). Gradle provides",
        "a [repository](https://plugins.gradle.org/) where you can search for plugins.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "question",
      "id": "59d7a987-a488-465c-9a89-9e73e3d43d64",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Question:2",
        "What's a plugin?",
        "",
        "Answer:4",
        "Plugins enhance Gradle's abilities. Gradle is a very basic tool that can do very few things. When we ran",
        "the `./gradle tasks` command, we saw all that Gradle could do. A Gradle plugin comprise a set of tasks, configuration",
        "objects and conventions.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "5c009d8b-0eff-47f3-a205-9b5c3c3ba952",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Let's see what our project is capable of, by listing its tasks.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "2c474145-b28d-4ccd-9dc0-7c3d31fd12d7",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "./gradlew tasks"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {},
      "commandTimeout": 30.000000000
    },
    {
      "type": "markdown",
      "id": "fe723b4a-463e-46ca-9b2c-a17640177992",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Gradle only has the _Build Setup tasks_, the _Greetings tasks_ (that we created), and the _Help tasks_.",
        "",
        "```",
        "Build Setup tasks",
        "-----------------",
        "init - Initializes a new Gradle build.",
        "wrapper - Generates Gradle wrapper files.",
        "",
        "Greetings tasks",
        "---------------",
        "bye - A simple task that prints a simple message",
        "hello - A simple task that prints a simple message",
        "",
        "Help tasks",
        "----------",
        "buildEnvironment - Displays all buildscript dependencies declared in root project 'gradle-fundamentals-manual'.",
        "dependencies - Displays all dependencies declared in root project 'gradle-fundamentals-manual'.",
        "dependencyInsight - Displays the insight into a specific dependency in root project 'gradle-fundamentals-manual'.",
        "help - Displays a help message.",
        "javaToolchains - Displays the detected java toolchains.",
        "outgoingVariants - Displays the outgoing variants of root project 'gradle-fundamentals-manual'.",
        "projects - Displays the sub-projects of root project 'gradle-fundamentals-manual'.",
        "properties - Displays the properties of root project 'gradle-fundamentals-manual'.",
        "tasks - Displays the tasks runnable from root project 'gradle-fundamentals-manual'.",
        "```",
        "",
        "Let's introduce the [`base` plugin](https://docs.gradle.org/current/userguide/base_plugin.html).",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "git-apply-patch",
      "id": "43b9ad86-5f7c-477b-b9bb-e16418a66cf8",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "diff --git a/build.gradle b/build.gradle",
        "index c47822c..d5a12dc 100644",
        "--- a/build.gradle",
        "+++ b/build.gradle",
        "@@ -1,3 +1,7 @@",
        "+plugins {",
        "+    id 'base'",
        "+}",
        "+",
        " tasks.register('hello') {",
        "     group = 'Greetings'",
        "     description = 'A simple task that prints a simple message'",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "d4777fda-c550-4b30-ad75-b44194f52a1f",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Now let's list the tasks again.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "e30a3dd6-7f17-4f25-9ecb-b32df18b77d8",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "./gradlew tasks"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "c39c3a3f-fbdc-41f4-a1ce-0dbb64742f81",
      "parameters": [
        "Two new Gradle groups, the _Build tasks_ and the _Verification tasks_ were added.",
        "",
        "```",
        "Build tasks",
        "-----------",
        "assemble - Assembles the outputs of this project.",
        "build - Assembles and tests this project.",
        "clean - Deletes the build directory.",
        "```",
        "",
        "```",
        "Verification tasks",
        "------------------",
        "check - Runs all checks.",
        "```",
        "",
        "Let's run the `build` task.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "672f4c77-7a64-4384-a837-e94d5d5dc58a",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "./gradlew build"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "7d51501c-3d4b-44c0-9923-ff0c97532ff0",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "The `build` task is ideal to build the project. It depends on two tasks, then `assemble` and the `check` tasks, both",
        "part of the [`base` plugin](https://docs.gradle.org/current/userguide/base_plugin.html#sec:base_tasks). The `assemble`",
        "task is used to compile the code, while the `check` task is used to run all tests.",
        "",
        "We can use the `--console=verbose` argument to see all the tasks that are executed.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "ebb7ca33-86dd-460a-ac5b-cc081c1339e9",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "./gradlew build --console=verbose"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "8476e5ea-1af3-43f9-af85-b9fd655ba1f3",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "We can use another plugin to determine which tasks depend on what.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "git-apply-patch",
      "id": "98366d37-41cb-4410-bf99-f5babf53d698",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "diff --git a/build.gradle b/build.gradle",
        "index d5a12dc..b299ce1 100644",
        "--- a/build.gradle",
        "+++ b/build.gradle",
        "@@ -1,5 +1,6 @@",
        " plugins {",
        "     id 'base'",
        "+    id 'org.barfuin.gradle.taskinfo' version '1.3.1'",
        " }",
        " ",
        " tasks.register('hello') {",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "question",
      "id": "98a9a9a0-9e9a-4cb5-9851-58100afe4fa3",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Question:2",
        "Why is there a version after the `taskinfo` plugin but not after the `base` plugin?",
        "",
        "Answer:4",
        "The built-in plugins do not require a version as these are packaged with the version of Gradle we are using.",
        "The `taskinfo` plugin is developed and maintained by a third party and thus we need to indicate which version of the",
        "plugin we want to use.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "df1b71de-0904-46aa-ad87-bb46fa54a32f",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Let's list all tasks, as this plugin does not use groups for the tasks that it introduces.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "b3b9f5d9-9ce0-4c61-8478-178134dcb1a2",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "./gradlew tasks --all"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {},
      "commandTimeout": 300.000000000
    },
    {
      "type": "markdown",
      "id": "34fbe9ec-036f-4c9e-a95b-fca97fc6dec7",
      "parameters": [
        "Three new tasks, the `tiJson`, `tiOrder`, and `tiTree`, are made available",
        "",
        "```",
        "Other tasks",
        "-----------",
        "components - Displays the components produced by root project 'gradle-fundamentals-manual'. [deprecated]",
        "dependentComponents - Displays the dependent components of components in root project 'gradle-fundamentals-manual'. [deprecated]",
        "model - Displays the configuration model of root project 'gradle-fundamentals-manual'. [deprecated]",
        "prepareKotlinBuildScriptModel",
        "tiJson - Creates a JSON file with task dependencies of a given task, and their task types.",
        "tiOrder - Displays which tasks would be executed in what order for a given task, and their task types.",
        "tiTree - Displays task dependencies of a given task as a tree, and their task types.",
        "```",
        "",
        "Let's see what tasks the `build` task depends on.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "ac169c71-5d76-4213-8253-ac6ee66dcb0f",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "./gradlew build tiTree"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {},
      "commandTimeout": 30.000000000
    },
    {
      "type": "markdown",
      "id": "fba468d0-1558-4308-b806-723052221261",
      "parameters": [
        "The syntax is a bit weired. The `tiTree` task, will cancel the `build` task and instead it simply prints the tasks that",
        "the `build` task depends on, as shown next.",
        "",
        "```",
        "> Task :tiTree",
        ":build         (org.gradle.api.DefaultTask)",
        "+--- :assemble (org.gradle.api.DefaultTask)",
        "`--- :check    (org.gradle.api.DefaultTask)",
        "```",
        "",
        "Task names can be long, and Gradle is allows us to type partial names instead as shown next.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "0ff309a9-f201-4d21-86de-599614ea5701",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "./gradlew build tT"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "8e00e784-b3a2-4ae3-bf8f-d1d6f922d872",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "The task name `theLongTaskName` can be shortened to `tLTN`, for example, preserving the case.",
        "",
        "This concludes the plugin section. Let's commit our changes before moving to the next section.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "55843a8a-a055-4902-98c8-b57886eff2f8",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "git add .",
        "git commit --message 'Add base and task info plugins'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "section",
      "id": "a3eb9187-4e2f-45eb-98d2-b2891b68afbd",
      "parameters": [
        "The Gradle Daemon"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "928568be-ee78-4ca2-942f-aa268f23ab44",
      "parameters": [
        "Any program takes time to start, referred to as [cold start](https://en.wikipedia.org/wiki/Cold_start_%28computing%29).",
        "Gradle address this problem by using a daemon, referred to as",
        "the [Gradle Daemon](https://docs.gradle.org/current/userguide/gradle_daemon.html), as described",
        "in [Why the Gradle Daemon is important for performance](https://docs.gradle.org/current/userguide/gradle_daemon.html#sec:why_the_daemon)",
        "section. The Gradle Daemon is triggered automatically once we run our first Gradle command.",
        "",
        "Let's list all Gradle Daemon.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "841d3552-82f7-438d-b5ff-f7d405ede24e",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "./gradlew --status"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "2c760e39-5c5d-4ac7-9102-b3755038dc5d",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Here we have one Gradle Daemon running. The Gradle Daemon is version dependent, thus cannot use a Gradle Daemon for",
        "version 7.3 to run a task for version 7.3.3. ",
        "",
        "We can stop all Gradle Daemons using the `--stop` argument.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "70548880-9c21-44c0-aaa6-50d39ad9d5a6",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "./gradlew --stop"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "8190beef-a71f-4398-b357-b09195b63ea8",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "./gradlew --status"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "ec877cbe-5fe8-40cc-8a6e-39abbd640222",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "Next time we run a Gradle task, another daemon will be created. We can also instruct Gradle not to use a daemon, as",
        "shown next.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "0428cce1-5b45-4e81-9ec6-e760f89b82ab",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "./gradlew build --no-daemon"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {},
      "commandTimeout": 30.000000000
    },
    {
      "type": "markdown",
      "id": "ff3914c4-03e6-4be6-acba-5b1cfb084f06",
      "workingDirectory": "gradle-fundamentals-manual",
      "parameters": [
        "The Gradle Daemon is Gradle's workhorse. The Gradle tasks are executed by a daemon. When the `--no-daemon` is used, a",
        "single-use daemon is created and then destroyed as indicated in the output.",
        "",
        "```",
        "To honour the JVM settings for this build a single-use Daemon process will be forked. See https://docs.gradle.org/7.3.3/userguide/gradle_daemon.html#sec:disabling_the_daemon.",
        "Daemon will be stopped at the end of the build ",
        "```",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "section",
      "id": "4c51b615-8460-46e2-95ae-e48200c98030",
      "parameters": [
        "Create Gradle Project"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "2037456d-58d5-489c-853b-94cb6d6c5397",
      "parameters": [
        "In the previous example, we have created the Gradle project manually. Gradle provides",
        "the [`init` task](https://docs.gradle.org/current/dsl/org.gradle.buildinit.tasks.InitBuild.html) that does just that. In",
        "this section we will see how to use the Gradle `init` task to create the same project we created before.",
        "",
        "We will use a different directory so that we don't overwrite what we have done before. We will start by deleting the",
        "directory if exists so that we start on a clean slate. This ensures that we don't have any residue from previous runs of",
        "this example.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "7dfd6885-945d-481d-ab56-23e7c00ff7f0",
      "parameters": [
        "rm -rf 'gradle-fundamentals-init'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "c8bd6ef0-e7c1-4abc-962e-6e817331b2c5",
      "parameters": [
        "Create the directory from where we will be working. All subsequent commands are to be executed from within this",
        "directory.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "04523b30-d856-4145-9736-a34f1447b99f",
      "parameters": [
        "mkdir 'gradle-fundamentals-init'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "58221eb9-0d96-4b98-b326-8d6e18233623",
      "parameters": [
        "Let's version control this directory so that we can keep track of the changes.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "a3be2504-4c4d-41b4-8cfe-7da041c953a7",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "git init --initial-branch=main"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "00f215dd-0dc8-4ed2-ba98-b16101796e10",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "We need to configure Git's user name and email address and we can reuse the variables that we set before.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "fd9ee4cf-38b1-4a7c-9956-c358cbc56191",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "git config user.name '${DEVELOPER_NAME}'",
        "git config user.email '${DEVELOPER_EMAIL}'"
      ],
      "variables": [
        "DEVELOPER_NAME",
        "DEVELOPER_EMAIL"
      ],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "303b5bab-3b47-4e95-9185-a690ac852ff3",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "Let's verify that our Git configuration was properly applied.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "d8baf9fa-e589-4e2a-a3b0-d765c5503a41",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "git config --list --local"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "6586de53-b004-4042-af2d-bbd396b18886",
      "parameters": [
        "Both name and email should be properly set, as shown next.",
        "",
        "```",
        "user.name=${DEVELOPER_NAME}",
        "user.email=${DEVELOPER_EMAIL}",
        "```",
        ""
      ],
      "variables": [
        "DEVELOPER_NAME",
        "DEVELOPER_EMAIL"
      ],
      "environmentVariables": [],
      "values": {
        "DEVELOPER_NAME": "Albert Attard",
        "DEVELOPER_EMAIL": "albertattard@gmail.com"
      }
    },
    {
      "type": "markdown",
      "id": "99e9c2c2-496b-4aa1-9fa1-775fd03b0629",
      "parameters": [
        "Now let's create the Gradle project using the `init` task.",
        "",
        "The Gradle `init` task is an interactive command and if no arguments are provided, this task will walk us through a",
        "command-line wizard where we select the type of project, Gradle's DSL (Groovy or Kotlin) and other frameworks that we",
        "like to use. In this example, we will provide all these options are task arguments.",
        "",
        "If you like to run the Gradle `init` tasks, in an interactive mode, please select the following options",
        "",
        "- Basic Application (hence the `--type basic`)",
        "- Groovy DSL (hence the `--dsl groovy`)",
        "- Use `gradle-fundamentals-init` as the project name (hence the `--project-name gradle-fundamentals-init`)",
        "",
        "You may be asked whether you like to use new features, which you may opt in. These will not affect our example. With",
        "that being said, it is always better to start with the newest features and this will simplify migration in the future as",
        "you will have fewer steps to follow. Note that software does need to be migrated especially when security",
        "vulnerabilities are discovered (like the infamous [Log4J Shell vulnerability](https://en.wikipedia.org/wiki/Log4Shell)).",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "478f8cd8-a14e-4e4a-8ae0-af4fa79b95aa",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "gradle init --type basic --dsl groovy --project-name gradle-fundamentals-init"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {},
      "commandTimeout": 30.000000000
    },
    {
      "type": "markdown",
      "id": "91cef74e-3f23-41c1-bbb2-47129df6ae81",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "Let's see what the Gradle `init` task has created.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "05198a16-07fa-4b81-b1e4-2a104b323373",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "ls -la"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "b5a8955c-0448-4de5-8c60-75d859c7ed9c",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "We should see something similar to the following",
        "",
        "```",
        "-rw-r--r--  1 root root  154 Apr 27 12:34 .gitattributes",
        "-rw-r--r--  1 root root  103 Apr 27 12:34 .gitignore",
        "-rw-r--r--  1 root root  200 Apr 27 12:34 build.gradle",
        "drwxr-xr-x  3 root root   96 Apr 27 12:34 gradle",
        "-rwxr-xr-x  1 root root 8047 Apr 27 12:34 gradlew",
        "-rw-r--r--  1 root root 2763 Apr 27 12:34 gradlew.bat",
        "-rw-r--r--  1 root root  373 Apr 27 12:34 settings.gradle",
        "```",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "478473d0-fc59-4ea0-850b-0edabe45770c",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "The Gradle `init` task has created several things for us, including the Gradle wrapper.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "8c2c525b-fbe7-4ff6-b21a-2e5548963162",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "tree gradle"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "4a0751be-81ab-49ed-b779-c22cdba301cb",
      "parameters": [
        "The Gradle wrapper is found within the `gradle` directory",
        "",
        "```",
        "gradle",
        "`-- wrapper",
        "    |-- gradle-wrapper.jar",
        "    `-- gradle-wrapper.properties",
        "",
        "1 directory, 2 files",
        "```",
        "",
        "Let's see what's in the `settings.gradle` file.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "82576516-1950-44da-b600-0ba6785f232d",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "cat 'settings.gradle'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "7d4970af-36c9-4ec8-94b2-2d0bea47cb1c",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "The file contains some comments, which we can delete, and the project name. Let's delete the comments as we don't need",
        "these.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "git-apply-patch",
      "id": "3af7de84-a14a-4d96-807f-2a78c13cb1d1",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "diff --git a/settings.gradle b/settings.gradle",
        "index fd273a0..5737df9 100644",
        "--- a/settings.gradle",
        "+++ b/settings.gradle",
        "@@ -1,10 +1 @@",
        "-/*",
        "- * This file was generated by the Gradle 'init' task.",
        "- *",
        "- * The settings file is used to specify which projects to include in your build.",
        "- *",
        "- * Detailed information about configuring a multi-project build in Gradle can be found",
        "- * in the user manual at https://docs.gradle.org/7.3.3/userguide/multi_project_builds.html",
        "- */",
        "-",
        " rootProject.name = 'gradle-fundamentals-init'",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "5fe71107-5872-408c-bc13-14de6411a8e3",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "Let's see what's in the `build.gradle` file.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "7cd91d1e-f6c9-48f4-9d55-09820fc96b75",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "cat 'build.gradle'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "63e0fdf3-5206-428d-ba8d-20dff378fe15",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "This file contains just comments. Let's empty the file first.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "git-apply-patch",
      "id": "18b1a9f4-a5d1-4b1f-96c8-922b20b27c6a",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "diff --git a/build.gradle b/build.gradle",
        "index 893ec91..e69de29 100644",
        "--- a/build.gradle",
        "+++ b/build.gradle",
        "@@ -1,6 +0,0 @@",
        "-/*",
        "- * This file was generated by the Gradle 'init' task.",
        "- *",
        "- * This is a general purpose Gradle build.",
        "- * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.3.3/samples",
        "- */",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "b4ce95a8-6c03-4a45-a683-42029f05ae0c",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "Now, let's add the plugins and the `hello` and `bye` tasks that we created before.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "git-apply-patch",
      "id": "d806a487-f1d5-4a0f-9379-479bdd8143bd",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "diff --git a/build.gradle b/build.gradle",
        "index e69de29..1cfe90d 100644",
        "--- a/build.gradle",
        "+++ b/build.gradle",
        "@@ -0,0 +1,20 @@",
        "+plugins {",
        "+    id 'base'",
        "+    id 'org.barfuin.gradle.taskinfo' version '1.3.1'",
        "+}",
        "+",
        "+tasks.register('hello') {",
        "+    group = 'Greetings'",
        "+    description = 'A simple task that prints a simple message'",
        "+    doLast {",
        "+        println 'Hello Gradle'",
        "+    }",
        "+}",
        "+",
        "+tasks.register('bye') {",
        "+    group = 'Greetings'",
        "+    description = 'A simple task that prints a simple message'",
        "+    doLast {",
        "+        println 'See you later, Gradle'",
        "+    }",
        "+}",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "56106280-0361-4856-b482-ce139417568f",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "Let see what's in the 'gradle/wrapper/gradle-wrapper.properties' file.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "6bbe9c7f-cd0b-4e9b-a908-17ba215f1f8e",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "cat 'gradle/wrapper/gradle-wrapper.properties'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "3983fc4e-11b0-456e-813d-c9d5b298e882",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "We can set the version either from the 'gradle/wrapper/gradle-wrapper.properties' or using the `--gradle-version`",
        "argument to the `wrapper ` task, as shown next. Given that we are already using the required Gradle version, we don't",
        "need to do anything and the command is only shown here for completeness. This command is idempotent and running it again",
        "will not change anything.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "5049d699-c978-4854-924d-fe26800bc324",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "./gradlew wrapper --gradle-version=7.3.3"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "164a3fcd-f7cc-459b-884c-8654c51af9c3",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "The Gradle `init` command also included the `.gitignore` file. Let's see its contents.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "22f3564b-07b6-4453-960e-a3f0c5480b4e",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "cat '.gitignore'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "148d0c72-f407-4cac-8080-a92ac0b2421d",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "The Gradle `.gradle` and `build` folders are included by default. Let's remove the comments and add some IDE related",
        "folders, such as `.idea` used by [IntelliJ](https://www.jetbrains.com/idea/) and `.vscode` (and `bin`) used",
        "by [VS Code](https://code.visualstudio.com/) and some of its plugins.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "git-apply-patch",
      "id": "1e1ba805-4ba4-436b-9717-17b3e16080b9",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "diff --git a/.gitignore b/.gitignore",
        "index 1b6985c..92b4736 100644",
        "--- a/.gitignore",
        "+++ b/.gitignore",
        "@@ -1,5 +1,5 @@",
        "-# Ignore Gradle project-specific cache directory",
        " .gradle",
        "-",
        "-# Ignore Gradle build output directory",
        "+.idea",
        "+.vscode",
        "+bin",
        " build",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "markdown",
      "id": "5313f650-3d8d-44e4-b6f9-55b79f4ec2be",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "We create the same project, this time using the Gradle `init` task, which simplifies the process.",
        ""
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    },
    {
      "type": "command",
      "id": "20f2d333-4c8b-4bf2-a312-c049b6eccb54",
      "workingDirectory": "gradle-fundamentals-init",
      "parameters": [
        "git add .",
        "git commit --message 'Create project with two tasks'"
      ],
      "variables": [],
      "environmentVariables": [],
      "values": {}
    }
  ]
}